<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberDAO">
	<!-- 회원가입 / insert -->
	<insert id="insert" parameterType="memberVO"> 
		INSERT INTO MEMBER (NUM, ID, NIC, NAME, EMAIL, PWD, ADRES, POSTCODE, DETAILADRES, EXTRAADRES, INTER, FILEIMG, REGDATE, INTRO, THUMBIMG, AUTH) VALUES (MEMBER_SEQ.nextval, #{id}, #{nic}, #{name}, #{email}, #{pwd, jdbcType=VARCHAR}, #{adres}, #{postcode}, #{detailadres}, #{extraadres}, #{inter}, #{fileImg}, SYSDATE, #{intro}, #{thumbImg}, #{auth})
	</insert>
	
	<select id="selectById" parameterType="String" resultType="memberVO">
		SELECT * FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 아이디 중복 확인 -->
	<select id="idCheck" parameterType="String" resultType="Int">
		SELECT COUNT(*) FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 닉네임 중복 확인 -->
	<select id="nicCheck" parameterType="String" resultType="Int">
		SELECT COUNT(*) FROM MEMBER WHERE NIC = #{nic}
	</select>
	
	<!-- 로그인 아이디 비밀번호 확인 -->
	<select id="loginCheck" parameterType="hashmap" resultType="String">
		SELECT COUNT(ID) FROM MEMBER WHERE ID = #{id} AND PWD = #{pwd}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="hashmap" resultType="String">
		SELECT ID FROM MEMBER WHERE NAME = #{name} AND EMAIL = #{email}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="emailCheck" parameterType="String" resultType="int">
		SELECT COUNT(EMAIL) FROM MEMBER WHERE EMAIL = #{email}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePwd" parameterType="hashmap">
		UPDATE MEMBER SET PWD = #{pwd} WHERE ID = #{id}
	</update>
	
	<!-- 비밀번호 변경 시 같은 비밀번호는 불가능 
	<select id="samePwdCheck" parameterType="hashmap" resultType="String">
		SELECT PWD FROM REGISTER WHERE ID = #{id} and PWD = #{pwd} 
	</select> -->
	
	<!-- 관심사 변경 -->
	<update id="changeInter" parameterType="hashmap">
		UPDATE MEMBER SET INTER = #{inter} WHERE ID = #{id}
	</update>
	
	<!-- 내 관심사 가져오기 -->
	<select id="selectInter" parameterType="String" resultType="String">
		SELECT INTER FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 자기소개 변경 -->
	<update id="changeIntro" parameterType="hashmap">
		UPDATE MEMBER SET INTRO = #{intro} WHERE ID = #{id}
	</update>
	
	<!-- 자기소개 가져오기 -->
	<select id="selectIntro" parameterType="String" resultType="String">
		SELECT INTRO FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 내 주소 불러오기 -->
	<select id="selectAddres" parameterType="String" resultType="hashmap">
		SELECT ADRES, POSTCODE, DETAILADRES, EXTRAADRES FROM MEMBER WHERE ID = #{id}
	</select>
	
	<update id="changeAddress" parameterType="hashmap">
		UPDATE MEMBER SET ADRES = #{adres}, POSTCODE = #{postcode}, DETAILADRES = #{detailadres}, EXTRAADRES = #{extraadres} WHERE ID = #{id}
	</update>
	<select id="selectInterName" parameterType="int" resultType="String">
		SELECT INTERNAME FROM INTEREST WHERE INTERCD = #{intercd}
	</select>
	
	<select id="changeEmail" parameterType="hashmap">
		UPDATE MEMBER SET EMAIL = #{email} WHERE ID = #{id}
	</select>
	
	<update id="changeNic" parameterType="hashmap">
		UPDATE MEMBER SET NIC = #{nic} WHERE ID = #{id}
	</update>
	
	<update id="changeImg" parameterType="hashmap">
		UPDATE MEMBER SET FILEIMG = #{fileImg}, THUMBIMG = #{thumbImg} WHERE ID = #{id}
	</update>
	
	<select id="compareNicNum" parameterType="String" resultType="Integer">
		select NUM FROM MEMBER WHERE NIC = #{nic}
	</select>
	
	<select id="compareNumNic" parameterType="int" resultType="String">
		select NIC FROM MEMBER WHERE NUM = #{num}
	</select>

	<!-- 전체 회원 NUM가져오기 -->
	<select id="selectMemberNum" resultType="Integer">
		SELECT NUM FROM MEMBER
	</select>
	
	<select id="selectCafeLord" resultType="Integer">
		SELECT M.NUM FROM MEMBER M 
  		JOIN CFMEMBER CF 
    	ON M.NUM = CF.MEMNUM
      	WHERE CF.AUTH = 'C1'
	</select>
</mapper>
